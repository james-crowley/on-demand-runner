description: >
  Provision On Demand Runners
parameters:
  aws-region:
    default: AWS_DEFAULT_REGION
    description: |
      Env var of AWS region to operate in. If no region is provided US-EAST-1 
      will be selected.
    type: env_var_name
  aws-secret-access-key:
    default: AWS_SECRET_ACCESS_KEY
    description: |
      AWS secret key for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. $AWS_SECRET_ACCESS_KEY.
    type: env_var_name
  aws-access-key-id:
    default: AWS_ACCESS_KEY_ID
    description: |
      AWS access key id for IAM role. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. AWS_ACCESS_KEY.
    type: env_var_name
  aws-ami-id:
    default: AWS_AMI_ID
    description: |
      An AWS AMI(Amazon Machine Image) ID for the image you want
      spun up as an EC2 instance. Set this to the name of
      the environment variable you will use to hold this
      value, i.e. AWS_AMI_ID.
    type: env_var_name
  aws-security-group-id:
    default: AWS_SECURITY_GROUP_ID
    description: |
      The ID of the AWS security group you want to be applied
      to the EC2 instance(s). Set this to the name of
      the environment variable you will use to hold this
      value, i.e. AWS_SECURITY_GROUP_ID.
    type: env_var_name
  aws-vpc-id:
    default: AWS_VPC_ID
    description: |
      The ID of the VPC you want the EC2 instance(s) to be 
      deployed in. If left blank, the default VPC will be selected.
      Set this to the name of the environment variable you will use 
      to hold this value, i.e. AWS_VPC_ID.
    type: env_var_name
  aws-ssh-key:
    default: AWS_SSH_KEY
    description: |
      The name of the SSH key you want the EC2 instance(s) to have
      injected. Please note you need to already have uploaded the key
      to AWS to reference the SSH key name. Set this to the name of 
      the environment variable you will use to hold this value, i.e. AWS_SSH_KEY.
    type: env_var_name
  aws-instance-type:
    default: AWS_INSTANCE_TYPE
    description: |
      A valid instance type/size for a EC2 instance. If no instance type is provided
      a t2.mirco will be selected. Set this to the name of the environment variable 
      you will use to hold this value, i.e. AWS_INSTANCE_TYPE.
    type: env_var_name
  circleci-namespace:
    default: CIRCLECI_NAMESPACE
    description: |
      A CircleCI generated namespace for your organization. Please see
      https://circleci.com/docs/2.0/orb-concepts/#namespaces for more details.
    type: env_var_name
  resource_class:
    default: RESOURCE_CLASS
    description: |
      Name of the resource class that will be generated and used for On Demand Runners. 
      If not resource class is given a default will be selected using 'pipeline.id'. PLEASE note you
      need to set resource class to a name that is not currently being used, as the resource class will be deleted.
    type: env_var_name
  number_of_numbers:
    default: NUMBER_OF_RUNNERS
    description: |
      Number of on demand runners to deploy. If no number is provided only 1 
      on demand runner will be deployed. PLEASE be careful setting this number.
    type: env_var_name
  number_of_waits:
    default: NUMBER_OF_WAITS
    description: |
      Number of on waits(10 seconds each) for the EC2 instance(s) to be provisioned before failure.
      If no number is provided 18 waits(3 minutes) will be selected.
    type: env_var_name
  ansible_git_url:
    default: ANSIBLE_GIT_URL
    description: |
      The GIT URL for the on demand runner Ansible roles, playbooks, and tasks. You should not
      change this unless you are debugging. If no URL is provided the URL will be https://github.com/james-crowley/on-demand-runners.git.
    type: env_var_name
  ansible_git_branch:
    default: ANSIBLE_GIT_BRANCH
    description: |
      The GIT branch for the on demand runner Ansible roles, playbooks, and tasks. You should not
      change this unless you are debugging. If no branch is provided the branch will be 'main'.
    type: env_var_name
steps:
  - run:
      name: Setting Defaults if Variables are not Set
      command: |
          echo "export AWS_DEFAULT_REGION=$(echo ${AWS_DEFAULT_REGION:-US-EAST-1})" >> $BASH_ENV
          echo "export AWS_INSTANCE_TYPE=$(echo ${AWS_INSTANCE_TYPE:-t2.mirco})" >> $BASH_ENV
          echo "export NUMBER_OF_RUNNERS=$(echo ${NUMBER_OF_RUNNERS:-1})" >> $BASH_ENV
          echo "export NUMBER_OF_WAITS=$(echo ${NUMBER_OF_WAITS:-18})" >> $BASH_ENV
          echo "export ANSIBLE_FORCE_COLOR=$(echo ${ANSIBLE_FORCE_COLOR:-true})" >> $BASH_ENV
          echo "export ANSIBLE_GIT_URL=$(echo ${ANSIBLE_GIT_URL:-https://github.com/james-crowley/on-demand-runners.git})" >> $BASH_ENV
          echo "export ANSIBLE_GIT_BRANCH=$(echo ${ANSIBLE_GIT_BRANCH:-main})" >> $BASH_ENV
          source $BASH_ENV

  - run: Clone On Demand Runner Ansible from Github
    command: |
        git clone ${ANSIBLE_GIT_URL} && cd ./on-demand-runners && git checkout ${ANSIBLE_GIT_BRANCH}
        
  - run: Provision On Demand Runners
    working_directory: ~/project/on-demand-runners/auto-runner/
    command: |
        ansible-playbook provision-on-demand-runners.yml -e "REGION=$AWS_DEFAULT_REGION AMI_ID=$AWS_AMI_ID SECURITY_GROUP=$AWS_SECURITY_GROUP_ID VPC_ID=$AWS_VPC_ID SSH_KEY_NAME=$AWS_SSH_KEY INSTANCE_TYPE=$AWS_INSTANCE_TYPE NAMESPACE=$CIRCLECI_NAMESPACE RESOURCE_CLASS=$RESOURCE_CLASS NUMBER_OF_RUNNERS=$NUMBER_OF_RUNNERS UNTIL_RETRIES_RUNNERS=$NUMBER_OF_WAITS TEMPLATE_DYNAMIC_INVENTORY=true CLOUD_PROVIDER=aws"